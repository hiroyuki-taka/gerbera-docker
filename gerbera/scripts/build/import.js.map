{"version":3,"sources":["webpack://gerbera-script/./src/common.ts","webpack://gerbera-script/webpack/bootstrap","webpack://gerbera-script/webpack/runtime/define property getters","webpack://gerbera-script/webpack/runtime/hasOwnProperty shorthand","webpack://gerbera-script/webpack/runtime/make namespace object","webpack://gerbera-script/./src/import.ts"],"names":["getPlaylistType","mimetype","escapeSlash","name","replace","getLastPath","location","p","split","length","getRootPath","rootPath","r","substring","lastIndexOf","dir","charAt","createContainerChain","arr","map","s","join","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","regex","orig","mime","refID","id","onlineservice","ONLINE_SERVICE_APPLE_TRAILERS","addCdsObject","found","match","print","object_script_path","JSON","stringify","container","year","season","title","subtitle","addVideo","theora"],"mappings":";kEAAO,SAASA,EAAgBC,GAC5B,MAAiB,oBAAbA,EACO,MAEM,kBAAbA,EACO,MAEJ,GAIJ,SAASC,EAAYC,GACxB,OAAOA,EAAKC,QAAQ,MAAO,QAAQA,QAAQ,MAAO,OAG/C,SAASC,EAAYC,GACxB,IAAMC,EAAID,EAASE,MAAM,KACzB,OAAID,EAAEE,OAAS,GAAKF,EAAEA,EAAEE,OAAS,GACtBF,EAAEA,EAAEE,OAAS,GAEb,GAIR,SAASC,EAAYC,EAAyBL,GACjD,GAAIK,GAAYA,EAASF,OAAS,EAAG,CACjC,IAAMG,EAAID,EAASE,UAAU,EAAGF,EAASG,YAAY,MAErD,MAAsB,OADhBC,EAAMT,EAASO,UAAUD,EAAEH,OAAQH,EAASQ,YAAY,OACtDE,OAAO,GACJD,EAAIF,UAAU,GAAGL,MAAM,KAEvBO,EAAIP,MAAM,KAGrB,IAAMO,EACN,MAAY,MADNA,EAAMV,EAAYC,IAEb,CAACJ,EAAYa,IAGrB,GAGJ,SAASE,EAAqBC,GACjC,MAAO,IAAOA,EAAIC,KAAI,SAAAC,GAAK,OAAAlB,EAAYkB,MAAIC,KAAK,K,oMC1ChDC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUE,EAAQA,EAAOD,QAASF,GAG/CG,EAAOD,QCnBfF,EAAoBK,EAAI,SAASH,EAASI,GACzC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEN,EAASK,IAC5EE,OAAOC,eAAeR,EAASK,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICC/Fd,EAAoBX,EAAI,SAASa,GACX,oBAAXgB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeR,EAASgB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeR,EAAS,aAAc,CAAEkB,OAAO,K,qSCuEvD,IAAMC,EAAQ,6FA0Bd,GAAuC,MAAnC,IAAA5C,iBAAgB6C,KAAK5C,UAAkB,CACvC,IACM6C,EADMD,KAAK5C,SAASO,MAAM,KACf,GAEX4B,EAAM,EAAH,KAAOS,MAAI,CAAEE,MAAOF,KAAKG,KAMrB,UAATF,IACIV,EAAIa,gBAAkBC,+BAnClC,SAAkBd,GACde,aAAaf,GAAK,IAAAnB,sBAAqB,CAAC,QAAS,eAEjD,IAAMmC,EAAQhB,EAAI9B,SAAS+C,MAAMT,GAIjC,GAFAU,MAAM,WAAYC,mBAAoBnB,EAAI9B,SAAUkD,KAAKC,UAAUL,IAE/DA,EAAO,CACP,IAAMM,EAAYN,EAAM,GAClBO,EAAOP,EAAM,GACbQ,EAASR,EAAM,GACfS,EAAQT,EAAM,GACdU,EAAWV,EAAM,GACPA,EAAM,GACK,QAAbA,EAAM,KAGhBD,aAAa,EAAD,KAAKf,GAAG,CAAEyB,MAAOC,KAAW,IAAA7C,sBAAqB,CAAC,QAAS,QAAS4C,KAChFV,aAAa,EAAD,KAAKf,GAAG,CAAEyB,MAAOC,KAAW,IAAA7C,sBAAqB,CAAC,QAAS,cAAeyC,EAAWG,KACjGV,aAAa,EAAD,KAAKf,GAAG,CAAEyB,MAAOC,KAAW,IAAA7C,sBAAqB,CAAC,QAAS,SAAU0C,EAAMC,EAAQC,OAmB/FE,CAAS3B,IAQK,oBAAlBS,KAAK5C,UACD4C,KAAKmB,Q","file":"import.js","sourcesContent":["export function getPlaylistType(mimetype: string) {\r\n    if (mimetype === 'audio/x-mpegurl') {\r\n        return 'm3u'\r\n    }\r\n    if (mimetype === 'audio/x-scpls') {\r\n        return 'pls'\r\n    }\r\n    return ''\r\n\r\n}\r\n\r\nexport function escapeSlash(name): string {\r\n    return name.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\//g, \"\\\\/\")\r\n}\r\n\r\nexport function getLastPath(location: string) {\r\n    const p = location.split('/')\r\n    if (p.length > 1 && p[p.length - 2]) {\r\n        return p[p.length - 2]\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport function getRootPath(rootPath: string | null, location: string): string[] {\r\n    if (rootPath && rootPath.length > 0) {\r\n        const r = rootPath.substring(0, rootPath.lastIndexOf('/'))\r\n        const dir = location.substring(r.length, location.lastIndexOf('/'))\r\n        if (dir.charAt(0) === '/') {\r\n            return dir.substring(1).split('/')\r\n        } else {\r\n            return dir.split('/')\r\n        }\r\n    } else {\r\n        const dir = getLastPath(location)\r\n        if (dir !== '') {\r\n            return [escapeSlash(dir)]\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\nexport function createContainerChain(arr: string[]): string {\r\n    return '/' + (arr.map(s => escapeSlash(s)).join('/'))\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {createContainerChain, getPlaylistType, getRootPath} from \"./common\";\r\n\r\ndeclare const object_script_path: string\r\n\r\ndeclare const ONLINE_SERVICE_APPLE_TRAILERS\r\ndeclare const ONLINE_SERVICE_NONE\r\n\r\ndeclare const OBJECT_TYPE_CONTAINER\r\ndeclare const OBJECT_TYPE_ITEM\r\ndeclare const OBJECT_TYPE_ITEM_EXTERNAL_URL\r\n\r\ndeclare const M_TITLE\r\ndeclare const M_ARTIST\r\ndeclare const M_ALBUM\r\ndeclare const M_DATE\r\ndeclare const M_GENRE\r\ndeclare const M_DESCRIPTION\r\ndeclare const M_REGION\r\ndeclare const M_TRACKNUMBER\r\ndeclare const M_PARTNUMBER\r\ndeclare const M_AUTHOR\r\n\r\ndeclare function addCdsObject(obj: Orig, containerChain: string, lastContainerClass?: string)\r\ndeclare function copyObject<T>(originalObject: T): T\r\ndeclare function print(...values)\r\ndeclare function f2i(s: string): string\r\ndeclare function m2i(s: string): string\r\ndeclare function p2i(s: string): string\r\ndeclare function j2i(s: string): string\r\n\r\n\r\ninterface Orig {\r\n    readonly id: number\r\n    readonly parentID: number\r\n    objectType: any\r\n    mimetype: string\r\n    upnpclass: string\r\n    readonly location: string\r\n    title: string\r\n    readonly onlineservice: any\r\n    readonly theora: number\r\n    readonly aux\r\n    playlistOrder: number\r\n    meta: any\r\n}\r\n\r\ndeclare const orig: Orig\r\n\r\nfunction addAudio(obj: Orig) {\r\n    const desc: string[] = []\r\n    let artist_full\r\n    let album_full\r\n\r\n    const title = obj.meta[M_TITLE] || obj.title\r\n\r\n    let artist = obj.meta[M_ARTIST]\r\n    if (artist) {\r\n        artist_full = artist\r\n        desc.push(artist)\r\n    } else {\r\n        artist = 'Unknown'\r\n        artist_full = null\r\n    }\r\n\r\n    let album = obj.meta[M_ALBUM]\r\n    if (album) {\r\n        album_full = album\r\n        desc.push(album)\r\n    } else {\r\n        album = 'Unknown'\r\n        album_full = null\r\n    }\r\n\r\n    desc.push(title)\r\n}\r\n\r\nconst regex = /.*\\/(.)\\/([0-9]{4})([1-4]Q) (.*)\\/(.*?)(-[0-9]+年[0-9]+月[0-9]+日[0-9]+時[0-9]+分)?(-.*)?\\.mp4$/\r\n\r\nfunction addVideo(obj: Orig) {\r\n    addCdsObject(obj, createContainerChain(['Video', 'All Video']))\r\n\r\n    const found = obj.location.match(regex)\r\n\r\n    print('addVideo', object_script_path, obj.location, JSON.stringify(found))\r\n\r\n    if (found) {\r\n        const container = found[1]\r\n        const year = found[2]\r\n        const season = found[3]\r\n        const title = found[4]\r\n        const subtitle = found[5]\r\n        const airtime = found[6]\r\n        const is_cm = found[7] === '-cm'\r\n\r\n        if (!is_cm) {\r\n            addCdsObject({...obj, title: subtitle}, createContainerChain(['Video', 'Title', title]))\r\n            addCdsObject({...obj, title: subtitle}, createContainerChain(['Video', 'Directories', container, title]))\r\n            addCdsObject({...obj, title: subtitle}, createContainerChain(['Video', 'Season', year, season, title]))\r\n        }\r\n    }\r\n}\r\n\r\nif (getPlaylistType(orig.mimetype) === '') {\r\n    const arr = orig.mimetype.split('/');\r\n    const mime = arr[0]\r\n\r\n    const obj = {...orig, refID: orig.id}\r\n\r\n    if (mime === 'audio') {\r\n\r\n    }\r\n\r\n    if (mime === 'video') {\r\n        if (obj.onlineservice === ONLINE_SERVICE_APPLE_TRAILERS) {\r\n\r\n        } else {\r\n            addVideo(obj)\r\n        }\r\n    }\r\n\r\n    if (mime === 'video') {\r\n\r\n    }\r\n\r\n    if (orig.mimetype === 'application/ogg') {\r\n        if (orig.theora === 1) {\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n}"],"sourceRoot":""}